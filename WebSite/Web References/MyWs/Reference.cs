//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WebSite.MyWs {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserStudentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupListOfUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupListOnlyOfUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupOfEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupChildOfGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback MasterGroupListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupChildOfGroupListOperationCompleted;
        
        private System.Threading.SendOrPostCallback MasterGroupListOfUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserGroupGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserGroupAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserGroupUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserGroupDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserGroupListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserGroupListOfUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RoleGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback RoleAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback RoleUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RoleDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback RoleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RoleListNoAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventListOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventListOfGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventListOfGroupOnlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventListOfUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventListOfWeekOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventListOfGroupByDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventListOfGroupsByDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventListOfUserByDatesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::WebSite.Properties.Settings.Default.WebSite_MyWs_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event UserGetCompletedEventHandler UserGetCompleted;
        
        /// <remarks/>
        public event UserAddCompletedEventHandler UserAddCompleted;
        
        /// <remarks/>
        public event UserUpdateCompletedEventHandler UserUpdateCompleted;
        
        /// <remarks/>
        public event UserDeleteCompletedEventHandler UserDeleteCompleted;
        
        /// <remarks/>
        public event UserListCompletedEventHandler UserListCompleted;
        
        /// <remarks/>
        public event UserStudentListCompletedEventHandler UserStudentListCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event GroupGetCompletedEventHandler GroupGetCompleted;
        
        /// <remarks/>
        public event GroupAddCompletedEventHandler GroupAddCompleted;
        
        /// <remarks/>
        public event GroupUpdateCompletedEventHandler GroupUpdateCompleted;
        
        /// <remarks/>
        public event GroupDeleteCompletedEventHandler GroupDeleteCompleted;
        
        /// <remarks/>
        public event GroupListCompletedEventHandler GroupListCompleted;
        
        /// <remarks/>
        public event GroupListOfUserCompletedEventHandler GroupListOfUserCompleted;
        
        /// <remarks/>
        public event GroupListOnlyOfUserCompletedEventHandler GroupListOnlyOfUserCompleted;
        
        /// <remarks/>
        public event GroupOfEventCompletedEventHandler GroupOfEventCompleted;
        
        /// <remarks/>
        public event GroupChildOfGroupCompletedEventHandler GroupChildOfGroupCompleted;
        
        /// <remarks/>
        public event MasterGroupListCompletedEventHandler MasterGroupListCompleted;
        
        /// <remarks/>
        public event GroupChildOfGroupListCompletedEventHandler GroupChildOfGroupListCompleted;
        
        /// <remarks/>
        public event MasterGroupListOfUserCompletedEventHandler MasterGroupListOfUserCompleted;
        
        /// <remarks/>
        public event UserGroupGetCompletedEventHandler UserGroupGetCompleted;
        
        /// <remarks/>
        public event UserGroupAddCompletedEventHandler UserGroupAddCompleted;
        
        /// <remarks/>
        public event UserGroupUpdateCompletedEventHandler UserGroupUpdateCompleted;
        
        /// <remarks/>
        public event UserGroupDeleteCompletedEventHandler UserGroupDeleteCompleted;
        
        /// <remarks/>
        public event UserGroupListCompletedEventHandler UserGroupListCompleted;
        
        /// <remarks/>
        public event UserGroupListOfUserCompletedEventHandler UserGroupListOfUserCompleted;
        
        /// <remarks/>
        public event RoleGetCompletedEventHandler RoleGetCompleted;
        
        /// <remarks/>
        public event RoleAddCompletedEventHandler RoleAddCompleted;
        
        /// <remarks/>
        public event RoleUpdateCompletedEventHandler RoleUpdateCompleted;
        
        /// <remarks/>
        public event RoleDeleteCompletedEventHandler RoleDeleteCompleted;
        
        /// <remarks/>
        public event RoleListCompletedEventHandler RoleListCompleted;
        
        /// <remarks/>
        public event RoleListNoAdminCompletedEventHandler RoleListNoAdminCompleted;
        
        /// <remarks/>
        public event EventGetCompletedEventHandler EventGetCompleted;
        
        /// <remarks/>
        public event EventAddCompletedEventHandler EventAddCompleted;
        
        /// <remarks/>
        public event EventUpdateCompletedEventHandler EventUpdateCompleted;
        
        /// <remarks/>
        public event EventDeleteCompletedEventHandler EventDeleteCompleted;
        
        /// <remarks/>
        public event EventListCompletedEventHandler EventListCompleted;
        
        /// <remarks/>
        public event EventListOfGroupCompletedEventHandler EventListOfGroupCompleted;
        
        /// <remarks/>
        public event EventListOfGroupOnlyCompletedEventHandler EventListOfGroupOnlyCompleted;
        
        /// <remarks/>
        public event EventListOfUserCompletedEventHandler EventListOfUserCompleted;
        
        /// <remarks/>
        public event EventListOfWeekCompletedEventHandler EventListOfWeekCompleted;
        
        /// <remarks/>
        public event EventListOfGroupByDatesCompletedEventHandler EventListOfGroupByDatesCompleted;
        
        /// <remarks/>
        public event EventListOfGroupsByDatesCompletedEventHandler EventListOfGroupsByDatesCompleted;
        
        /// <remarks/>
        public event EventListOfUserByDatesCompletedEventHandler EventListOfUserByDatesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MyUser UserGet(int userid) {
            object[] results = this.Invoke("UserGet", new object[] {
                        userid});
            return ((MyUser)(results[0]));
        }
        
        /// <remarks/>
        public void UserGetAsync(int userid) {
            this.UserGetAsync(userid, null);
        }
        
        /// <remarks/>
        public void UserGetAsync(int userid, object userState) {
            if ((this.UserGetOperationCompleted == null)) {
                this.UserGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserGetOperationCompleted);
            }
            this.InvokeAsync("UserGet", new object[] {
                        userid}, this.UserGetOperationCompleted, userState);
        }
        
        private void OnUserGetOperationCompleted(object arg) {
            if ((this.UserGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserGetCompleted(this, new UserGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UserAdd(MyUser u) {
            object[] results = this.Invoke("UserAdd", new object[] {
                        u});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UserAddAsync(MyUser u) {
            this.UserAddAsync(u, null);
        }
        
        /// <remarks/>
        public void UserAddAsync(MyUser u, object userState) {
            if ((this.UserAddOperationCompleted == null)) {
                this.UserAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserAddOperationCompleted);
            }
            this.InvokeAsync("UserAdd", new object[] {
                        u}, this.UserAddOperationCompleted, userState);
        }
        
        private void OnUserAddOperationCompleted(object arg) {
            if ((this.UserAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserAddCompleted(this, new UserAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UserUpdate(MyUser u) {
            object[] results = this.Invoke("UserUpdate", new object[] {
                        u});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UserUpdateAsync(MyUser u) {
            this.UserUpdateAsync(u, null);
        }
        
        /// <remarks/>
        public void UserUpdateAsync(MyUser u, object userState) {
            if ((this.UserUpdateOperationCompleted == null)) {
                this.UserUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserUpdateOperationCompleted);
            }
            this.InvokeAsync("UserUpdate", new object[] {
                        u}, this.UserUpdateOperationCompleted, userState);
        }
        
        private void OnUserUpdateOperationCompleted(object arg) {
            if ((this.UserUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserUpdateCompleted(this, new UserUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UserDelete(MyUser u) {
            object[] results = this.Invoke("UserDelete", new object[] {
                        u});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UserDeleteAsync(MyUser u) {
            this.UserDeleteAsync(u, null);
        }
        
        /// <remarks/>
        public void UserDeleteAsync(MyUser u, object userState) {
            if ((this.UserDeleteOperationCompleted == null)) {
                this.UserDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserDeleteOperationCompleted);
            }
            this.InvokeAsync("UserDelete", new object[] {
                        u}, this.UserDeleteOperationCompleted, userState);
        }
        
        private void OnUserDeleteOperationCompleted(object arg) {
            if ((this.UserDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserDeleteCompleted(this, new UserDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MyUser[] UserList() {
            object[] results = this.Invoke("UserList", new object[0]);
            return ((MyUser[])(results[0]));
        }
        
        /// <remarks/>
        public void UserListAsync() {
            this.UserListAsync(null);
        }
        
        /// <remarks/>
        public void UserListAsync(object userState) {
            if ((this.UserListOperationCompleted == null)) {
                this.UserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserListOperationCompleted);
            }
            this.InvokeAsync("UserList", new object[0], this.UserListOperationCompleted, userState);
        }
        
        private void OnUserListOperationCompleted(object arg) {
            if ((this.UserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserListCompleted(this, new UserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserStudentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MyUser[] UserStudentList() {
            object[] results = this.Invoke("UserStudentList", new object[0]);
            return ((MyUser[])(results[0]));
        }
        
        /// <remarks/>
        public void UserStudentListAsync() {
            this.UserStudentListAsync(null);
        }
        
        /// <remarks/>
        public void UserStudentListAsync(object userState) {
            if ((this.UserStudentListOperationCompleted == null)) {
                this.UserStudentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserStudentListOperationCompleted);
            }
            this.InvokeAsync("UserStudentList", new object[0], this.UserStudentListOperationCompleted, userState);
        }
        
        private void OnUserStudentListOperationCompleted(object arg) {
            if ((this.UserStudentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserStudentListCompleted(this, new UserStudentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MyUser Login(string userEmail, string pass) {
            object[] results = this.Invoke("Login", new object[] {
                        userEmail,
                        pass});
            return ((MyUser)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string userEmail, string pass) {
            this.LoginAsync(userEmail, pass, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string userEmail, string pass, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        userEmail,
                        pass}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GroupGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group GroupGet(int groupid) {
            object[] results = this.Invoke("GroupGet", new object[] {
                        groupid});
            return ((Group)(results[0]));
        }
        
        /// <remarks/>
        public void GroupGetAsync(int groupid) {
            this.GroupGetAsync(groupid, null);
        }
        
        /// <remarks/>
        public void GroupGetAsync(int groupid, object userState) {
            if ((this.GroupGetOperationCompleted == null)) {
                this.GroupGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupGetOperationCompleted);
            }
            this.InvokeAsync("GroupGet", new object[] {
                        groupid}, this.GroupGetOperationCompleted, userState);
        }
        
        private void OnGroupGetOperationCompleted(object arg) {
            if ((this.GroupGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupGetCompleted(this, new GroupGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GroupAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GroupAdd(Group g) {
            object[] results = this.Invoke("GroupAdd", new object[] {
                        g});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GroupAddAsync(Group g) {
            this.GroupAddAsync(g, null);
        }
        
        /// <remarks/>
        public void GroupAddAsync(Group g, object userState) {
            if ((this.GroupAddOperationCompleted == null)) {
                this.GroupAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupAddOperationCompleted);
            }
            this.InvokeAsync("GroupAdd", new object[] {
                        g}, this.GroupAddOperationCompleted, userState);
        }
        
        private void OnGroupAddOperationCompleted(object arg) {
            if ((this.GroupAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupAddCompleted(this, new GroupAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GroupUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GroupUpdate(Group g) {
            object[] results = this.Invoke("GroupUpdate", new object[] {
                        g});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GroupUpdateAsync(Group g) {
            this.GroupUpdateAsync(g, null);
        }
        
        /// <remarks/>
        public void GroupUpdateAsync(Group g, object userState) {
            if ((this.GroupUpdateOperationCompleted == null)) {
                this.GroupUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupUpdateOperationCompleted);
            }
            this.InvokeAsync("GroupUpdate", new object[] {
                        g}, this.GroupUpdateOperationCompleted, userState);
        }
        
        private void OnGroupUpdateOperationCompleted(object arg) {
            if ((this.GroupUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupUpdateCompleted(this, new GroupUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GroupDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GroupDelete(Group g) {
            object[] results = this.Invoke("GroupDelete", new object[] {
                        g});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GroupDeleteAsync(Group g) {
            this.GroupDeleteAsync(g, null);
        }
        
        /// <remarks/>
        public void GroupDeleteAsync(Group g, object userState) {
            if ((this.GroupDeleteOperationCompleted == null)) {
                this.GroupDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupDeleteOperationCompleted);
            }
            this.InvokeAsync("GroupDelete", new object[] {
                        g}, this.GroupDeleteOperationCompleted, userState);
        }
        
        private void OnGroupDeleteOperationCompleted(object arg) {
            if ((this.GroupDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupDeleteCompleted(this, new GroupDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GroupList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] GroupList() {
            object[] results = this.Invoke("GroupList", new object[0]);
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GroupListAsync() {
            this.GroupListAsync(null);
        }
        
        /// <remarks/>
        public void GroupListAsync(object userState) {
            if ((this.GroupListOperationCompleted == null)) {
                this.GroupListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupListOperationCompleted);
            }
            this.InvokeAsync("GroupList", new object[0], this.GroupListOperationCompleted, userState);
        }
        
        private void OnGroupListOperationCompleted(object arg) {
            if ((this.GroupListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupListCompleted(this, new GroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GroupListOfUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] GroupListOfUser(MyUser u) {
            object[] results = this.Invoke("GroupListOfUser", new object[] {
                        u});
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GroupListOfUserAsync(MyUser u) {
            this.GroupListOfUserAsync(u, null);
        }
        
        /// <remarks/>
        public void GroupListOfUserAsync(MyUser u, object userState) {
            if ((this.GroupListOfUserOperationCompleted == null)) {
                this.GroupListOfUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupListOfUserOperationCompleted);
            }
            this.InvokeAsync("GroupListOfUser", new object[] {
                        u}, this.GroupListOfUserOperationCompleted, userState);
        }
        
        private void OnGroupListOfUserOperationCompleted(object arg) {
            if ((this.GroupListOfUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupListOfUserCompleted(this, new GroupListOfUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GroupListOnlyOfUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] GroupListOnlyOfUser(MyUser u) {
            object[] results = this.Invoke("GroupListOnlyOfUser", new object[] {
                        u});
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GroupListOnlyOfUserAsync(MyUser u) {
            this.GroupListOnlyOfUserAsync(u, null);
        }
        
        /// <remarks/>
        public void GroupListOnlyOfUserAsync(MyUser u, object userState) {
            if ((this.GroupListOnlyOfUserOperationCompleted == null)) {
                this.GroupListOnlyOfUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupListOnlyOfUserOperationCompleted);
            }
            this.InvokeAsync("GroupListOnlyOfUser", new object[] {
                        u}, this.GroupListOnlyOfUserOperationCompleted, userState);
        }
        
        private void OnGroupListOnlyOfUserOperationCompleted(object arg) {
            if ((this.GroupListOnlyOfUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupListOnlyOfUserCompleted(this, new GroupListOnlyOfUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GroupOfEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group GroupOfEvent(MyEvent ev) {
            object[] results = this.Invoke("GroupOfEvent", new object[] {
                        ev});
            return ((Group)(results[0]));
        }
        
        /// <remarks/>
        public void GroupOfEventAsync(MyEvent ev) {
            this.GroupOfEventAsync(ev, null);
        }
        
        /// <remarks/>
        public void GroupOfEventAsync(MyEvent ev, object userState) {
            if ((this.GroupOfEventOperationCompleted == null)) {
                this.GroupOfEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupOfEventOperationCompleted);
            }
            this.InvokeAsync("GroupOfEvent", new object[] {
                        ev}, this.GroupOfEventOperationCompleted, userState);
        }
        
        private void OnGroupOfEventOperationCompleted(object arg) {
            if ((this.GroupOfEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupOfEventCompleted(this, new GroupOfEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GroupChildOfGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] GroupChildOfGroup(Group g) {
            object[] results = this.Invoke("GroupChildOfGroup", new object[] {
                        g});
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GroupChildOfGroupAsync(Group g) {
            this.GroupChildOfGroupAsync(g, null);
        }
        
        /// <remarks/>
        public void GroupChildOfGroupAsync(Group g, object userState) {
            if ((this.GroupChildOfGroupOperationCompleted == null)) {
                this.GroupChildOfGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupChildOfGroupOperationCompleted);
            }
            this.InvokeAsync("GroupChildOfGroup", new object[] {
                        g}, this.GroupChildOfGroupOperationCompleted, userState);
        }
        
        private void OnGroupChildOfGroupOperationCompleted(object arg) {
            if ((this.GroupChildOfGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupChildOfGroupCompleted(this, new GroupChildOfGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MasterGroupList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] MasterGroupList() {
            object[] results = this.Invoke("MasterGroupList", new object[0]);
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void MasterGroupListAsync() {
            this.MasterGroupListAsync(null);
        }
        
        /// <remarks/>
        public void MasterGroupListAsync(object userState) {
            if ((this.MasterGroupListOperationCompleted == null)) {
                this.MasterGroupListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMasterGroupListOperationCompleted);
            }
            this.InvokeAsync("MasterGroupList", new object[0], this.MasterGroupListOperationCompleted, userState);
        }
        
        private void OnMasterGroupListOperationCompleted(object arg) {
            if ((this.MasterGroupListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MasterGroupListCompleted(this, new MasterGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GroupChildOfGroupList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] GroupChildOfGroupList(Group[] gL) {
            object[] results = this.Invoke("GroupChildOfGroupList", new object[] {
                        gL});
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GroupChildOfGroupListAsync(Group[] gL) {
            this.GroupChildOfGroupListAsync(gL, null);
        }
        
        /// <remarks/>
        public void GroupChildOfGroupListAsync(Group[] gL, object userState) {
            if ((this.GroupChildOfGroupListOperationCompleted == null)) {
                this.GroupChildOfGroupListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupChildOfGroupListOperationCompleted);
            }
            this.InvokeAsync("GroupChildOfGroupList", new object[] {
                        gL}, this.GroupChildOfGroupListOperationCompleted, userState);
        }
        
        private void OnGroupChildOfGroupListOperationCompleted(object arg) {
            if ((this.GroupChildOfGroupListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupChildOfGroupListCompleted(this, new GroupChildOfGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MasterGroupListOfUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] MasterGroupListOfUser(MyUser u) {
            object[] results = this.Invoke("MasterGroupListOfUser", new object[] {
                        u});
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void MasterGroupListOfUserAsync(MyUser u) {
            this.MasterGroupListOfUserAsync(u, null);
        }
        
        /// <remarks/>
        public void MasterGroupListOfUserAsync(MyUser u, object userState) {
            if ((this.MasterGroupListOfUserOperationCompleted == null)) {
                this.MasterGroupListOfUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMasterGroupListOfUserOperationCompleted);
            }
            this.InvokeAsync("MasterGroupListOfUser", new object[] {
                        u}, this.MasterGroupListOfUserOperationCompleted, userState);
        }
        
        private void OnMasterGroupListOfUserOperationCompleted(object arg) {
            if ((this.MasterGroupListOfUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MasterGroupListOfUserCompleted(this, new MasterGroupListOfUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserGroupGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserGroup UserGroupGet(int usergroupid) {
            object[] results = this.Invoke("UserGroupGet", new object[] {
                        usergroupid});
            return ((UserGroup)(results[0]));
        }
        
        /// <remarks/>
        public void UserGroupGetAsync(int usergroupid) {
            this.UserGroupGetAsync(usergroupid, null);
        }
        
        /// <remarks/>
        public void UserGroupGetAsync(int usergroupid, object userState) {
            if ((this.UserGroupGetOperationCompleted == null)) {
                this.UserGroupGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserGroupGetOperationCompleted);
            }
            this.InvokeAsync("UserGroupGet", new object[] {
                        usergroupid}, this.UserGroupGetOperationCompleted, userState);
        }
        
        private void OnUserGroupGetOperationCompleted(object arg) {
            if ((this.UserGroupGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserGroupGetCompleted(this, new UserGroupGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserGroupAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UserGroupAdd(UserGroup ug) {
            object[] results = this.Invoke("UserGroupAdd", new object[] {
                        ug});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UserGroupAddAsync(UserGroup ug) {
            this.UserGroupAddAsync(ug, null);
        }
        
        /// <remarks/>
        public void UserGroupAddAsync(UserGroup ug, object userState) {
            if ((this.UserGroupAddOperationCompleted == null)) {
                this.UserGroupAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserGroupAddOperationCompleted);
            }
            this.InvokeAsync("UserGroupAdd", new object[] {
                        ug}, this.UserGroupAddOperationCompleted, userState);
        }
        
        private void OnUserGroupAddOperationCompleted(object arg) {
            if ((this.UserGroupAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserGroupAddCompleted(this, new UserGroupAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserGroupUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UserGroupUpdate(UserGroup ug) {
            object[] results = this.Invoke("UserGroupUpdate", new object[] {
                        ug});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UserGroupUpdateAsync(UserGroup ug) {
            this.UserGroupUpdateAsync(ug, null);
        }
        
        /// <remarks/>
        public void UserGroupUpdateAsync(UserGroup ug, object userState) {
            if ((this.UserGroupUpdateOperationCompleted == null)) {
                this.UserGroupUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserGroupUpdateOperationCompleted);
            }
            this.InvokeAsync("UserGroupUpdate", new object[] {
                        ug}, this.UserGroupUpdateOperationCompleted, userState);
        }
        
        private void OnUserGroupUpdateOperationCompleted(object arg) {
            if ((this.UserGroupUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserGroupUpdateCompleted(this, new UserGroupUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserGroupDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UserGroupDelete(UserGroup ug) {
            object[] results = this.Invoke("UserGroupDelete", new object[] {
                        ug});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UserGroupDeleteAsync(UserGroup ug) {
            this.UserGroupDeleteAsync(ug, null);
        }
        
        /// <remarks/>
        public void UserGroupDeleteAsync(UserGroup ug, object userState) {
            if ((this.UserGroupDeleteOperationCompleted == null)) {
                this.UserGroupDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserGroupDeleteOperationCompleted);
            }
            this.InvokeAsync("UserGroupDelete", new object[] {
                        ug}, this.UserGroupDeleteOperationCompleted, userState);
        }
        
        private void OnUserGroupDeleteOperationCompleted(object arg) {
            if ((this.UserGroupDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserGroupDeleteCompleted(this, new UserGroupDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserGroupList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserGroup[] UserGroupList() {
            object[] results = this.Invoke("UserGroupList", new object[0]);
            return ((UserGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void UserGroupListAsync() {
            this.UserGroupListAsync(null);
        }
        
        /// <remarks/>
        public void UserGroupListAsync(object userState) {
            if ((this.UserGroupListOperationCompleted == null)) {
                this.UserGroupListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserGroupListOperationCompleted);
            }
            this.InvokeAsync("UserGroupList", new object[0], this.UserGroupListOperationCompleted, userState);
        }
        
        private void OnUserGroupListOperationCompleted(object arg) {
            if ((this.UserGroupListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserGroupListCompleted(this, new UserGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserGroupListOfUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserGroup[] UserGroupListOfUser(MyUser u) {
            object[] results = this.Invoke("UserGroupListOfUser", new object[] {
                        u});
            return ((UserGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void UserGroupListOfUserAsync(MyUser u) {
            this.UserGroupListOfUserAsync(u, null);
        }
        
        /// <remarks/>
        public void UserGroupListOfUserAsync(MyUser u, object userState) {
            if ((this.UserGroupListOfUserOperationCompleted == null)) {
                this.UserGroupListOfUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserGroupListOfUserOperationCompleted);
            }
            this.InvokeAsync("UserGroupListOfUser", new object[] {
                        u}, this.UserGroupListOfUserOperationCompleted, userState);
        }
        
        private void OnUserGroupListOfUserOperationCompleted(object arg) {
            if ((this.UserGroupListOfUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserGroupListOfUserCompleted(this, new UserGroupListOfUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RoleGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role RoleGet(int roleid) {
            object[] results = this.Invoke("RoleGet", new object[] {
                        roleid});
            return ((Role)(results[0]));
        }
        
        /// <remarks/>
        public void RoleGetAsync(int roleid) {
            this.RoleGetAsync(roleid, null);
        }
        
        /// <remarks/>
        public void RoleGetAsync(int roleid, object userState) {
            if ((this.RoleGetOperationCompleted == null)) {
                this.RoleGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRoleGetOperationCompleted);
            }
            this.InvokeAsync("RoleGet", new object[] {
                        roleid}, this.RoleGetOperationCompleted, userState);
        }
        
        private void OnRoleGetOperationCompleted(object arg) {
            if ((this.RoleGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RoleGetCompleted(this, new RoleGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RoleAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RoleAdd(Role r) {
            object[] results = this.Invoke("RoleAdd", new object[] {
                        r});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RoleAddAsync(Role r) {
            this.RoleAddAsync(r, null);
        }
        
        /// <remarks/>
        public void RoleAddAsync(Role r, object userState) {
            if ((this.RoleAddOperationCompleted == null)) {
                this.RoleAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRoleAddOperationCompleted);
            }
            this.InvokeAsync("RoleAdd", new object[] {
                        r}, this.RoleAddOperationCompleted, userState);
        }
        
        private void OnRoleAddOperationCompleted(object arg) {
            if ((this.RoleAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RoleAddCompleted(this, new RoleAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RoleUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RoleUpdate(Role r) {
            object[] results = this.Invoke("RoleUpdate", new object[] {
                        r});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RoleUpdateAsync(Role r) {
            this.RoleUpdateAsync(r, null);
        }
        
        /// <remarks/>
        public void RoleUpdateAsync(Role r, object userState) {
            if ((this.RoleUpdateOperationCompleted == null)) {
                this.RoleUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRoleUpdateOperationCompleted);
            }
            this.InvokeAsync("RoleUpdate", new object[] {
                        r}, this.RoleUpdateOperationCompleted, userState);
        }
        
        private void OnRoleUpdateOperationCompleted(object arg) {
            if ((this.RoleUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RoleUpdateCompleted(this, new RoleUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RoleDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RoleDelete(Role r) {
            object[] results = this.Invoke("RoleDelete", new object[] {
                        r});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RoleDeleteAsync(Role r) {
            this.RoleDeleteAsync(r, null);
        }
        
        /// <remarks/>
        public void RoleDeleteAsync(Role r, object userState) {
            if ((this.RoleDeleteOperationCompleted == null)) {
                this.RoleDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRoleDeleteOperationCompleted);
            }
            this.InvokeAsync("RoleDelete", new object[] {
                        r}, this.RoleDeleteOperationCompleted, userState);
        }
        
        private void OnRoleDeleteOperationCompleted(object arg) {
            if ((this.RoleDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RoleDeleteCompleted(this, new RoleDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RoleList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role[] RoleList() {
            object[] results = this.Invoke("RoleList", new object[0]);
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void RoleListAsync() {
            this.RoleListAsync(null);
        }
        
        /// <remarks/>
        public void RoleListAsync(object userState) {
            if ((this.RoleListOperationCompleted == null)) {
                this.RoleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRoleListOperationCompleted);
            }
            this.InvokeAsync("RoleList", new object[0], this.RoleListOperationCompleted, userState);
        }
        
        private void OnRoleListOperationCompleted(object arg) {
            if ((this.RoleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RoleListCompleted(this, new RoleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RoleListNoAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role[] RoleListNoAdmin() {
            object[] results = this.Invoke("RoleListNoAdmin", new object[0]);
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void RoleListNoAdminAsync() {
            this.RoleListNoAdminAsync(null);
        }
        
        /// <remarks/>
        public void RoleListNoAdminAsync(object userState) {
            if ((this.RoleListNoAdminOperationCompleted == null)) {
                this.RoleListNoAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRoleListNoAdminOperationCompleted);
            }
            this.InvokeAsync("RoleListNoAdmin", new object[0], this.RoleListNoAdminOperationCompleted, userState);
        }
        
        private void OnRoleListNoAdminOperationCompleted(object arg) {
            if ((this.RoleListNoAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RoleListNoAdminCompleted(this, new RoleListNoAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EventGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MyEvent EventGet(int eventid) {
            object[] results = this.Invoke("EventGet", new object[] {
                        eventid});
            return ((MyEvent)(results[0]));
        }
        
        /// <remarks/>
        public void EventGetAsync(int eventid) {
            this.EventGetAsync(eventid, null);
        }
        
        /// <remarks/>
        public void EventGetAsync(int eventid, object userState) {
            if ((this.EventGetOperationCompleted == null)) {
                this.EventGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventGetOperationCompleted);
            }
            this.InvokeAsync("EventGet", new object[] {
                        eventid}, this.EventGetOperationCompleted, userState);
        }
        
        private void OnEventGetOperationCompleted(object arg) {
            if ((this.EventGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventGetCompleted(this, new EventGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EventAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int EventAdd(MyEvent e) {
            object[] results = this.Invoke("EventAdd", new object[] {
                        e});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void EventAddAsync(MyEvent e) {
            this.EventAddAsync(e, null);
        }
        
        /// <remarks/>
        public void EventAddAsync(MyEvent e, object userState) {
            if ((this.EventAddOperationCompleted == null)) {
                this.EventAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventAddOperationCompleted);
            }
            this.InvokeAsync("EventAdd", new object[] {
                        e}, this.EventAddOperationCompleted, userState);
        }
        
        private void OnEventAddOperationCompleted(object arg) {
            if ((this.EventAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventAddCompleted(this, new EventAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EventUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int EventUpdate(MyEvent e) {
            object[] results = this.Invoke("EventUpdate", new object[] {
                        e});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void EventUpdateAsync(MyEvent e) {
            this.EventUpdateAsync(e, null);
        }
        
        /// <remarks/>
        public void EventUpdateAsync(MyEvent e, object userState) {
            if ((this.EventUpdateOperationCompleted == null)) {
                this.EventUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventUpdateOperationCompleted);
            }
            this.InvokeAsync("EventUpdate", new object[] {
                        e}, this.EventUpdateOperationCompleted, userState);
        }
        
        private void OnEventUpdateOperationCompleted(object arg) {
            if ((this.EventUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventUpdateCompleted(this, new EventUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EventDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int EventDelete(MyEvent e) {
            object[] results = this.Invoke("EventDelete", new object[] {
                        e});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void EventDeleteAsync(MyEvent e) {
            this.EventDeleteAsync(e, null);
        }
        
        /// <remarks/>
        public void EventDeleteAsync(MyEvent e, object userState) {
            if ((this.EventDeleteOperationCompleted == null)) {
                this.EventDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventDeleteOperationCompleted);
            }
            this.InvokeAsync("EventDelete", new object[] {
                        e}, this.EventDeleteOperationCompleted, userState);
        }
        
        private void OnEventDeleteOperationCompleted(object arg) {
            if ((this.EventDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventDeleteCompleted(this, new EventDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EventList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MyEvent[] EventList() {
            object[] results = this.Invoke("EventList", new object[0]);
            return ((MyEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void EventListAsync() {
            this.EventListAsync(null);
        }
        
        /// <remarks/>
        public void EventListAsync(object userState) {
            if ((this.EventListOperationCompleted == null)) {
                this.EventListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventListOperationCompleted);
            }
            this.InvokeAsync("EventList", new object[0], this.EventListOperationCompleted, userState);
        }
        
        private void OnEventListOperationCompleted(object arg) {
            if ((this.EventListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventListCompleted(this, new EventListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EventListOfGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MyEvent[] EventListOfGroup(Group g) {
            object[] results = this.Invoke("EventListOfGroup", new object[] {
                        g});
            return ((MyEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void EventListOfGroupAsync(Group g) {
            this.EventListOfGroupAsync(g, null);
        }
        
        /// <remarks/>
        public void EventListOfGroupAsync(Group g, object userState) {
            if ((this.EventListOfGroupOperationCompleted == null)) {
                this.EventListOfGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventListOfGroupOperationCompleted);
            }
            this.InvokeAsync("EventListOfGroup", new object[] {
                        g}, this.EventListOfGroupOperationCompleted, userState);
        }
        
        private void OnEventListOfGroupOperationCompleted(object arg) {
            if ((this.EventListOfGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventListOfGroupCompleted(this, new EventListOfGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EventListOfGroupOnly", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MyEvent[] EventListOfGroupOnly(Group g) {
            object[] results = this.Invoke("EventListOfGroupOnly", new object[] {
                        g});
            return ((MyEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void EventListOfGroupOnlyAsync(Group g) {
            this.EventListOfGroupOnlyAsync(g, null);
        }
        
        /// <remarks/>
        public void EventListOfGroupOnlyAsync(Group g, object userState) {
            if ((this.EventListOfGroupOnlyOperationCompleted == null)) {
                this.EventListOfGroupOnlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventListOfGroupOnlyOperationCompleted);
            }
            this.InvokeAsync("EventListOfGroupOnly", new object[] {
                        g}, this.EventListOfGroupOnlyOperationCompleted, userState);
        }
        
        private void OnEventListOfGroupOnlyOperationCompleted(object arg) {
            if ((this.EventListOfGroupOnlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventListOfGroupOnlyCompleted(this, new EventListOfGroupOnlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EventListOfUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MyEvent[] EventListOfUser(MyUser u) {
            object[] results = this.Invoke("EventListOfUser", new object[] {
                        u});
            return ((MyEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void EventListOfUserAsync(MyUser u) {
            this.EventListOfUserAsync(u, null);
        }
        
        /// <remarks/>
        public void EventListOfUserAsync(MyUser u, object userState) {
            if ((this.EventListOfUserOperationCompleted == null)) {
                this.EventListOfUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventListOfUserOperationCompleted);
            }
            this.InvokeAsync("EventListOfUser", new object[] {
                        u}, this.EventListOfUserOperationCompleted, userState);
        }
        
        private void OnEventListOfUserOperationCompleted(object arg) {
            if ((this.EventListOfUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventListOfUserCompleted(this, new EventListOfUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EventListOfWeek", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MyEvent[] EventListOfWeek(System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("EventListOfWeek", new object[] {
                        startDate,
                        endDate});
            return ((MyEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void EventListOfWeekAsync(System.DateTime startDate, System.DateTime endDate) {
            this.EventListOfWeekAsync(startDate, endDate, null);
        }
        
        /// <remarks/>
        public void EventListOfWeekAsync(System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.EventListOfWeekOperationCompleted == null)) {
                this.EventListOfWeekOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventListOfWeekOperationCompleted);
            }
            this.InvokeAsync("EventListOfWeek", new object[] {
                        startDate,
                        endDate}, this.EventListOfWeekOperationCompleted, userState);
        }
        
        private void OnEventListOfWeekOperationCompleted(object arg) {
            if ((this.EventListOfWeekCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventListOfWeekCompleted(this, new EventListOfWeekCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EventListOfGroupByDates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MyEvent[] EventListOfGroupByDates(Group g, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("EventListOfGroupByDates", new object[] {
                        g,
                        startDate,
                        endDate});
            return ((MyEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void EventListOfGroupByDatesAsync(Group g, System.DateTime startDate, System.DateTime endDate) {
            this.EventListOfGroupByDatesAsync(g, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void EventListOfGroupByDatesAsync(Group g, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.EventListOfGroupByDatesOperationCompleted == null)) {
                this.EventListOfGroupByDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventListOfGroupByDatesOperationCompleted);
            }
            this.InvokeAsync("EventListOfGroupByDates", new object[] {
                        g,
                        startDate,
                        endDate}, this.EventListOfGroupByDatesOperationCompleted, userState);
        }
        
        private void OnEventListOfGroupByDatesOperationCompleted(object arg) {
            if ((this.EventListOfGroupByDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventListOfGroupByDatesCompleted(this, new EventListOfGroupByDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EventListOfGroupsByDates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MyEvent[] EventListOfGroupsByDates(int[] groupIdlst, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("EventListOfGroupsByDates", new object[] {
                        groupIdlst,
                        startDate,
                        endDate});
            return ((MyEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void EventListOfGroupsByDatesAsync(int[] groupIdlst, System.DateTime startDate, System.DateTime endDate) {
            this.EventListOfGroupsByDatesAsync(groupIdlst, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void EventListOfGroupsByDatesAsync(int[] groupIdlst, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.EventListOfGroupsByDatesOperationCompleted == null)) {
                this.EventListOfGroupsByDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventListOfGroupsByDatesOperationCompleted);
            }
            this.InvokeAsync("EventListOfGroupsByDates", new object[] {
                        groupIdlst,
                        startDate,
                        endDate}, this.EventListOfGroupsByDatesOperationCompleted, userState);
        }
        
        private void OnEventListOfGroupsByDatesOperationCompleted(object arg) {
            if ((this.EventListOfGroupsByDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventListOfGroupsByDatesCompleted(this, new EventListOfGroupsByDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EventListOfUserByDates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MyEvent[] EventListOfUserByDates(MyUser u, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("EventListOfUserByDates", new object[] {
                        u,
                        startDate,
                        endDate});
            return ((MyEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void EventListOfUserByDatesAsync(MyUser u, System.DateTime startDate, System.DateTime endDate) {
            this.EventListOfUserByDatesAsync(u, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void EventListOfUserByDatesAsync(MyUser u, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.EventListOfUserByDatesOperationCompleted == null)) {
                this.EventListOfUserByDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventListOfUserByDatesOperationCompleted);
            }
            this.InvokeAsync("EventListOfUserByDates", new object[] {
                        u,
                        startDate,
                        endDate}, this.EventListOfUserByDatesOperationCompleted, userState);
        }
        
        private void OnEventListOfUserByDatesOperationCompleted(object arg) {
            if ((this.EventListOfUserByDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventListOfUserByDatesCompleted(this, new EventListOfUserByDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MyUser {
        
        private int userIdField;
        
        private string fNameField;
        
        private string lNameField;
        
        private string userPhoneField;
        
        private string userEmailField;
        
        private string userPassField;
        
        private int roleIdField;
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string FName {
            get {
                return this.fNameField;
            }
            set {
                this.fNameField = value;
            }
        }
        
        /// <remarks/>
        public string LName {
            get {
                return this.lNameField;
            }
            set {
                this.lNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserPhone {
            get {
                return this.userPhoneField;
            }
            set {
                this.userPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string UserEmail {
            get {
                return this.userEmailField;
            }
            set {
                this.userEmailField = value;
            }
        }
        
        /// <remarks/>
        public string UserPass {
            get {
                return this.userPassField;
            }
            set {
                this.userPassField = value;
            }
        }
        
        /// <remarks/>
        public int RoleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Role {
        
        private int roleIdField;
        
        private string roleNameField;
        
        /// <remarks/>
        public int RoleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
        
        /// <remarks/>
        public string RoleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserGroup {
        
        private int userGroupIdField;
        
        private int groupIdField;
        
        private Group groupField;
        
        private int userIdField;
        
        /// <remarks/>
        public int UserGroupId {
            get {
                return this.userGroupIdField;
            }
            set {
                this.userGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public int GroupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
        
        /// <remarks/>
        public Group Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Group {
        
        private int groupIdField;
        
        private string groupNameField;
        
        private int masterGField;
        
        private string groupColorField;
        
        /// <remarks/>
        public int GroupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public int MasterG {
            get {
                return this.masterGField;
            }
            set {
                this.masterGField = value;
            }
        }
        
        /// <remarks/>
        public string GroupColor {
            get {
                return this.groupColorField;
            }
            set {
                this.groupColorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MyEvent {
        
        private int eventIdField;
        
        private System.DateTime eventDateField;
        
        private string descriptionField;
        
        private int groupIdField;
        
        private int userIdField;
        
        /// <remarks/>
        public int EventId {
            get {
                return this.eventIdField;
            }
            set {
                this.eventIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EventDate {
            get {
                return this.eventDateField;
            }
            set {
                this.eventDateField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int GroupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UserGetCompletedEventHandler(object sender, UserGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MyUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UserAddCompletedEventHandler(object sender, UserAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UserUpdateCompletedEventHandler(object sender, UserUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UserDeleteCompletedEventHandler(object sender, UserDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UserListCompletedEventHandler(object sender, UserListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MyUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UserStudentListCompletedEventHandler(object sender, UserStudentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserStudentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserStudentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MyUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MyUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GroupGetCompletedEventHandler(object sender, GroupGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GroupAddCompletedEventHandler(object sender, GroupAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GroupUpdateCompletedEventHandler(object sender, GroupUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GroupDeleteCompletedEventHandler(object sender, GroupDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GroupListCompletedEventHandler(object sender, GroupListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GroupListOfUserCompletedEventHandler(object sender, GroupListOfUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupListOfUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupListOfUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GroupListOnlyOfUserCompletedEventHandler(object sender, GroupListOnlyOfUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupListOnlyOfUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupListOnlyOfUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GroupOfEventCompletedEventHandler(object sender, GroupOfEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupOfEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupOfEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GroupChildOfGroupCompletedEventHandler(object sender, GroupChildOfGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupChildOfGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupChildOfGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void MasterGroupListCompletedEventHandler(object sender, MasterGroupListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MasterGroupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MasterGroupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GroupChildOfGroupListCompletedEventHandler(object sender, GroupChildOfGroupListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupChildOfGroupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupChildOfGroupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void MasterGroupListOfUserCompletedEventHandler(object sender, MasterGroupListOfUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MasterGroupListOfUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MasterGroupListOfUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UserGroupGetCompletedEventHandler(object sender, UserGroupGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserGroupGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserGroupGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UserGroupAddCompletedEventHandler(object sender, UserGroupAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserGroupAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserGroupAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UserGroupUpdateCompletedEventHandler(object sender, UserGroupUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserGroupUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserGroupUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UserGroupDeleteCompletedEventHandler(object sender, UserGroupDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserGroupDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserGroupDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UserGroupListCompletedEventHandler(object sender, UserGroupListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserGroupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserGroupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UserGroupListOfUserCompletedEventHandler(object sender, UserGroupListOfUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserGroupListOfUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserGroupListOfUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RoleGetCompletedEventHandler(object sender, RoleGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RoleGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RoleGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RoleAddCompletedEventHandler(object sender, RoleAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RoleAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RoleAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RoleUpdateCompletedEventHandler(object sender, RoleUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RoleUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RoleUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RoleDeleteCompletedEventHandler(object sender, RoleDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RoleDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RoleDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RoleListCompletedEventHandler(object sender, RoleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RoleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RoleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RoleListNoAdminCompletedEventHandler(object sender, RoleListNoAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RoleListNoAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RoleListNoAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventGetCompletedEventHandler(object sender, EventGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MyEvent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyEvent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventAddCompletedEventHandler(object sender, EventAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventUpdateCompletedEventHandler(object sender, EventUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventDeleteCompletedEventHandler(object sender, EventDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventListCompletedEventHandler(object sender, EventListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MyEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventListOfGroupCompletedEventHandler(object sender, EventListOfGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventListOfGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventListOfGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MyEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventListOfGroupOnlyCompletedEventHandler(object sender, EventListOfGroupOnlyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventListOfGroupOnlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventListOfGroupOnlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MyEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventListOfUserCompletedEventHandler(object sender, EventListOfUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventListOfUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventListOfUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MyEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventListOfWeekCompletedEventHandler(object sender, EventListOfWeekCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventListOfWeekCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventListOfWeekCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MyEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventListOfGroupByDatesCompletedEventHandler(object sender, EventListOfGroupByDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventListOfGroupByDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventListOfGroupByDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MyEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventListOfGroupsByDatesCompletedEventHandler(object sender, EventListOfGroupsByDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventListOfGroupsByDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventListOfGroupsByDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MyEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventListOfUserByDatesCompletedEventHandler(object sender, EventListOfUserByDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventListOfUserByDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventListOfUserByDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MyEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyEvent[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591